@model AppraisalSystem.Models.LocationAssetModel
  
@{
    ViewBag.Title = "สิ่งปลูกสร้าง";
    ViewBag.Header = "";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script type="text/javascript">

    function SizeAreaValue() {
        var width = parseFloat(clearPrefix(document.getElementById("width").value));
        var high = parseFloat(clearPrefix(document.getElementById("high").value));
        var value = width * high;
        document.getElementById("txtCalArea").value = numberWithCommas(value);
    }

    function CalMaterialValue() {

        var txtCalArea = parseFloat(clearPrefix(document.getElementById("txtCalArea").value));
        var price_per_meter = parseFloat(clearPrefix(document.getElementById("price_per_meter").value));
        var depreciation = parseFloat(clearPrefix(document.getElementById("depreciation").value));
        var value = ((txtCalArea * price_per_meter) - depreciation);
        document.getElementById("txtCalMaterial").value = numberWithCommas(value);
    };
</script>
<div class="panel-heading"><label>สิ่งปลูกสร้าง</label></div>
<div class="panel-body">
@functions 
{
    object getHtmlAttributes(string CssClass, string istyle, string onChange, string onKeyup, string dataplaceHolder)
    {

        var manageType = @TempData["appraisalManageType"].ToString();
        if (manageType == "v")
        {
            return new { @class = CssClass, @readonly = "readonly", data_placeholder = dataplaceHolder, style = istyle, onchange = onChange, onkeyup = onKeyup };
        }
        return new { @class = CssClass, style = istyle };
    }
}
@using (Html.BeginForm("ManageMaterial", "Manage", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="col-md-12">
        @Html.Raw(ViewData["alert"] != null ? ViewData["alert"].ToString() : "")
        <div class="form-group">
            <label>หมายเลขงาน</label>
            @Html.TextBox("appraisalAssetCode", @TempData["appraisalAssetCode"], new { @class = "form-control ui-wizard-content", @readonly = "readonly" })
            @Html.TextBox("appraisalManageType", @TempData["appraisalManageType"], new { @class = "form-control ui-wizard-content", @style = "display:none" })
            @Html.HiddenFor(model => model.appraisal_assets_id)
        </div>
        <div class="form-group">
            <label>หมายเลขสป.</label>
            @Html.TextBoxFor(model => model.no_buildings, @getHtmlAttributes("form-control ui-wizard-content", null , null, null,null))
            @Html.ValidationMessageFor(model => model.no_buildings)
        </div>
        <div class="form-group">
            <label class="textbox-inline fieldHeader150">
                <label>ประเภทอาคาร</label>
            </label>
            <label class="textbox-inline ddlForHeader100">
                @{
                    var buildingTypeAll = ViewData["BUILDING_TYPE"] as List<AppraisalSystem.Models.FilterModel>;
                    if (AppraisalSystem.Utility.ContentHelpers.IsNotnull(buildingTypeAll) && buildingTypeAll.Count > 0)
	                {
		                @Html.DropDownListFor(model => model.building_type_id, new SelectList(buildingTypeAll, "filter_value", "filter_text", Model.building_type_id),@getHtmlAttributes("form-control", null , null, null,"กรุณาเลือกประเภทอาคาร..."))
	                }
                    @Html.ValidationMessageFor(model => model.building_type_id)
                }
            </label>
            <label class="textbox-inline fieldHeader150">
                <label>จำนวนชั้น</label>
            </label>
            <label class="textbox-inline ddlForHeader100">
                @Html.TextBoxFor(model => model.floor, @getHtmlAttributes("form-control ui-wizard-content", null , null, null,null))
                @Html.ValidationMessageFor(model => model.floor)
            </label>
        </div>
        <div class="form-group">
            <label class="textbox-inline fieldHeader150">
                <label>สภาพสิ่งปลูกสร้าง</label>
            </label>
            <label class="textbox-inline ddlForHeader100">
                @{
                    var conditionBuildingAll = ViewData["CONDITION_BUILDING"] as List<AppraisalSystem.Models.FilterModel>;
                    if (AppraisalSystem.Utility.ContentHelpers.IsNotnull(conditionBuildingAll) && conditionBuildingAll.Count > 0)
	                {
		                @Html.DropDownListFor(model => model.condition_building_id, new SelectList(conditionBuildingAll, "filter_value", "filter_text", Model.condition_building_id), @getHtmlAttributes("form-control", null , null, null,"กรุณาเลือกสภาพสิ่งปลูกสร้าง..."))
	                }
                    @Html.ValidationMessageFor(model => model.condition_building_id)
                }
            </label>
            <label class="textbox-inline fieldHeader150">
                <label>อายุอาคาร</label>
            </label>
            <label class="textbox-inline ddlForHeader100">
                @Html.TextBoxFor(model => model.building_age, @getHtmlAttributes("form-control ui-wizard-content", null, null, null, null))
                @Html.ValidationMessageFor(model => model.building_age)
            </label>
        </div>
        <div class="form-group">
            <label>รายละเอียดสิ่งปลูกสร้าง</label>
            @Html.TextArea("txtHomeDesc", "", 3, 3, @getHtmlAttributes("form-control", null, null, null, null))
        </div>
    </div>
    <div class="col-md-6">
        <div class="well">
            <div class="form-group">
                <label>รายละเอียดสิ่งปลูกสร้าง(โครงสร้าง):</label>
            </div>
            <div class="form-group">
                <label class="textbox-inline fieldHeader100">
                    <label>โครงสร้าง</label>
                </label>
                <label class="textbox-inline ddlForHeader100">
                    @{
                        var structureAll = ViewData["STRUCTURE"] as List<AppraisalSystem.Models.FilterModel>;
                        if (AppraisalSystem.Utility.ContentHelpers.IsNotnull(structureAll) && structureAll.Count > 0)
	                    {
		                    @Html.DropDownListFor(model => model.structure_id, new SelectList(structureAll, "filter_value", "filter_text", Model.structure_id), @getHtmlAttributes("form-control", null , null, null,"กรุณาเลือกโครงสร้าง..."))
	                    }
                        @Html.ValidationMessageFor(model => model.structure_id)
                    }
                </label>
            </div>
            <div class="form-group">
                <label class="textbox-inline fieldHeader100">
                    <label>เสา</label>
                </label>
                <label class="textbox-inline ddlForHeader100">
                    @{
                        var poleAll = ViewData["STRUCTURE"] as List<AppraisalSystem.Models.FilterModel>;
                        if (AppraisalSystem.Utility.ContentHelpers.IsNotnull(poleAll) && poleAll.Count > 0)
	                    {
		                    @Html.DropDownListFor(model => model.pole_id, new SelectList(poleAll, "filter_value", "filter_text", Model.pole_id),  @getHtmlAttributes("form-control", null , null, null,"กรุณาเลือกประเภทเสา..."))
	                    }
                        @Html.ValidationMessageFor(model => model.pole_id)
                    }
                </label>
            </div>
            <div class="form-group">
                <label class="textbox-inline fieldHeader100">
                    <label>โครงหลังคา</label>
                </label>
                <label class="textbox-inline ddlForHeader100">
                    @{
                        var roofAll = ViewData["STRUCTURE"] as List<AppraisalSystem.Models.FilterModel>;
                        if (AppraisalSystem.Utility.ContentHelpers.IsNotnull(roofAll) && roofAll.Count > 0)
	                    {
		                    @Html.DropDownListFor(model => model.roof_id, new SelectList(roofAll, "filter_value", "filter_text", Model.roof_id),@getHtmlAttributes("form-control", null , null, null,"กรุณาเลือกโครงหลังคา..."))
	                    }
                        @Html.ValidationMessageFor(model => model.roof_id)
                    }
                </label>
            </div>
            <div class="form-group">
                <label class="textbox-inline fieldHeader100">
                    <label>วัสดุมุงฯ</label>
                </label>
                <label class="textbox-inline ddlForHeader100">
                    @{
                        var materialAll = ViewData["MATERIALS"] as List<AppraisalSystem.Models.FilterModel>;
                        if (AppraisalSystem.Utility.ContentHelpers.IsNotnull(materialAll) && materialAll.Count > 0)
	                    {
		                    @Html.DropDownListFor(model => model.materials_id, new SelectList(materialAll, "filter_value", "filter_text", Model.materials_id), @getHtmlAttributes("form-control", null , null, null,"กรุณาเลือกวัสดุมุงหลังคา..."))
	                    }
                        @Html.ValidationMessageFor(model => model.materials_id)
                    }
                </label>
            </div>
            <div class="form-group">
                <label class="textbox-inline fieldHeader100">
                    <label>ฝ้าเพดาน</label>
                </label>
                <label class="textbox-inline ddlForHeader100">
                    @{
                        var ceilingAll = ViewData["CEILING"] as List<AppraisalSystem.Models.FilterModel>;
                        if (AppraisalSystem.Utility.ContentHelpers.IsNotnull(ceilingAll) && ceilingAll.Count > 0)
	                    {
		                    @Html.DropDownListFor(model => model.ceiling_id, new SelectList(ceilingAll, "filter_value", "filter_text", Model.ceiling_id),@getHtmlAttributes("form-control", null , null, null,"กรุณาเลือกฝ้าเพดา..."))
	                    }
                        @Html.ValidationMessageFor(model => model.ceiling_id)
                    }
                </label>
            </div>
            <div class="form-group">
                <label class="textbox-inline fieldHeader100">
                    <label>ผนังภายนอก</label>
                </label>
                <label class="textbox-inline ddlForHeader100">
                    @{
                        var exteriorWallAll = ViewData["EX-INTERIOR_WALLS"] as List<AppraisalSystem.Models.FilterModel>;
                        if (AppraisalSystem.Utility.ContentHelpers.IsNotnull(exteriorWallAll) && exteriorWallAll.Count > 0)
	                    {
		                    @Html.DropDownListFor(model => model.exterior_walls_id, new SelectList(exteriorWallAll, "filter_value", "filter_text", Model.exterior_walls_id),@getHtmlAttributes("form-control", null , null, null,"กรุณาเลือกผนังภายนอก..."))
	                    }
                        @Html.ValidationMessageFor(model => model.exterior_walls_id)
                    }
                </label>
            </div>
            <div class="form-group">
                <label class="textbox-inline fieldHeader100">
                    <label>ผนังภายใน</label>
                </label>
                <label class="textbox-inline ddlForHeader100">
                    @{
                        var interiorWallAll = ViewData["EX-STAIR"] as List<AppraisalSystem.Models.FilterModel>;
                        if (AppraisalSystem.Utility.ContentHelpers.IsNotnull(interiorWallAll) && interiorWallAll.Count > 0)
	                    {
		                    @Html.DropDownListFor(model => model.interior_walls_id, new SelectList(interiorWallAll, "filter_value", "filter_text", Model.interior_walls_id),@getHtmlAttributes("form-control", null , null, null,"กรุณาเลือกผนังภายใน..."))
	                    }
                        @Html.ValidationMessageFor(model => model.interior_walls_id)
                    }
                </label>
            </div>
            <div class="form-group">
                <label class="textbox-inline fieldHeader100">
                    <label>บันได</label>
                </label>
                <label class="textbox-inline ddlForHeader100">
                    @{
                        var stairAll = ViewData["STAIR"] as List<AppraisalSystem.Models.FilterModel>;
                        if (AppraisalSystem.Utility.ContentHelpers.IsNotnull(stairAll) && stairAll.Count > 0)
	                    {
		                    @Html.DropDownListFor(model => model.stair_id, new SelectList(stairAll, "filter_value", "filter_text", Model.stair_id),@getHtmlAttributes("form-control", null , null, null,"กรุณาเลือกบันได..."))
	                    }
                        @Html.ValidationMessageFor(model => model.stair_id)
                    }
                </label>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="well">
            <div class="form-group">
                <label>รายละเอียดสิ่งปลูกสร้าง(ภายใน):</label>
            </div>
            <div class="form-group">
                <label class="textbox-inline">
                    <label>ห้อง/จำนวน</label>
                </label>
            </div>
            <div class="form-group">
                <label class="textbox-inline">
                    @Html.TextBoxFor(model => model.room_1,@getHtmlAttributes("form-control ui-wizard-content", null , null, null,null))
                    @Html.ValidationMessageFor(model => model.room_1)
                </label>
            </div>
            <div class="form-group">
                 <label class="textbox-inline">
                    @Html.TextBoxFor(model => model.room_2, @getHtmlAttributes("form-control ui-wizard-content", null, null, null, null))
                    @Html.ValidationMessageFor(model => model.room_2)
                </label>
            </div>
            <div class="form-group">
                 <label class="textbox-inline">
                    @Html.TextBoxFor(model => model.room_3, @getHtmlAttributes("form-control ui-wizard-content", null, null, null, null))
                    @Html.ValidationMessageFor(model => model.room_3)
                </label>
            </div>
            <div class="form-group">
                <label class="textbox-inline">
                    <label>ขนาดสิ่งปลูกสร้าง</label>
                </label>
            </div>
            <div class="form-group">
                <label class="textbox-inline">
                    @Html.TextBoxFor(model => model.width,@getHtmlAttributes("form-control ui-wizard-content", "width:150px" , "javascript:SizeAreaValue()", "javascript:SizeAreaValue()",null))
                    @Html.ValidationMessageFor(model => model.width)
                </label>
                <label class="textbox-inline">
                    <label>x&nbsp;</label>
                </label>
                <label class="textbox-inline">
                    @Html.TextBoxFor(model => model.high, @getHtmlAttributes("form-control ui-wizard-content", "width:150px", "javascript:SizeAreaValue()", "javascript:SizeAreaValue()", null))
                    @Html.ValidationMessageFor(model => model.high)
                </label>
             </div>
        </div>
    </div>
    <div class="col-md-12">
        <div class="form-group">
            <label class="textbox-inline">
                <label>&nbsp;<br/><br/>เนื้อที่(คิดเป็นตารางวา)</label>
            </label>
            <label class="textbox-inline">พื้นที่ทั้งหมด<br/>
                @Html.TextBox("txtCalArea", "", new { @class = "form-control ui-wizard-content money", @readonly = "readonly" })
            </label>
            <label class="textbox-inline">
                <label><br/>x&nbsp;</label>
            </label>
            <label class="textbox-inline">ราคาต่อตร.ม.<br/>
                 @Html.TextBoxFor(model => model.price_per_meter,@getHtmlAttributes("form-control ui-wizard-content money", null, null, "javascript:CalMaterialValue()", null))
                 @Html.ValidationMessageFor(model => model.price_per_meter)
            </label>
            <label class="textbox-inline">
                <label><br/>-&nbsp;</label>
            </label>
            <label class="textbox-inline">หักค่าเสื่อม<br/>
                 @Html.TextBoxFor(model => model.depreciation, @getHtmlAttributes("form-control ui-wizard-content money", null, null, "javascript:CalMaterialValue()", null))
                 @Html.ValidationMessageFor(model => model.depreciation)
            </label>
       </div>
       <div class="form-group">
            <label class="textbox-inline">
                <label style="width:140px;">&nbsp;</label>
            </label>
            <label class="textbox-inline">
             @if (TempData["appraisalManageType"].ToString() != "v")
             {
                <button type="button" id="btnCal" class="btn btn-danger ui-wizard-content ui-formwizard-button" style="float:right" value="แก้ไข" onclick="javascript:CalMaterialValue()" ><i class="fa fa-bitcoin"></i>&nbsp;กดคำนวน</button>
             }
             </label>
            <label class="textbox-inline">
                <label><br/>=&nbsp;</label>
            </label>
            <label class="textbox-inline">
                @Html.TextBox("txtCalMaterial", "", new { @class = "form-control ui-wizard-content money", @readonly = "readonly" })
            </label>
        </div>
         <div class="form-group">
             @{string appraisalManageType = Convert.ToString(TempData["AppraisalManageType"]);
               if (string.IsNullOrEmpty(appraisalManageType) || appraisalManageType == "u")
               {
             <button type="submit" id="btnSubmit" class="btn btn-info ui-wizard-content ui-formwizard-button" style="float:right;margin-right:10px" value="บันทึก"><i class="fa fa-save"></i> @Resources.ConfigResource.BtnSubmit</button>
               }
            }
        </div>
    </div>
}
</div>
